spring:
  profiles:
    active: local
  application:
    name: USER-SERVICE
  datasource:
    url: jdbc:mysql://${DB_HOST}:3306/zzimcong?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&useUnicode=true&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379
  cloud:
    service-registry:
      auto-registration:
        fail-fast: false

server:
  port: 8081
  error:
    whitelabel:
      enabled: false

email:
  host: smtp.gmail.com
  port: 587
  username: ${EMAIL_USERNAME}
  password: ${EMAIL_PASSWORD}
  properties:
    mail:
      smtp:
        auth: true
        starttls:
          enable: true
  sender: zzimcong99@gmail.com
  subject: "[찜콩] 이메일 인증번호가 발급되었습니다."
  template:
    path: classpath:templates/mailContent.html
  verification:
    code:
      length: 6
      expiry:
        seconds: 300
    token:
      expiry:
        minutes: 30

encryption:
  key: ${ENCRYPTION_KEY}

jwt:
  secret: ${JWT_SECRET}
  access-token:
    expiration: 3600000 # 1 hour
  refresh-token:
    expiration: 86400000 # 1 day

logging:
  level:
    com.netflix.discovery: DEBUG
    com.zzimcong.user: DEBUG
    org.springframework.security: DEBUG
    org.springframework.cloud: DEBUG
    org.springframework.web.reactive: DEBUG
    org.springframework.cloud.gateway: TRACE
    org.springframework.cloud.loadbalancer: TRACE

auth:
  cookie:
    refresh-token:
      name: refresh_token
      max-age: 604800000 # 1 week
      http-only: true
      secure: true
      path: "/"

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${EUREKA_HOST}:8761/eureka/
  instance:
    leaseRenewalIntervalInSeconds: 10
    health-check-url-path: /actuator/health

management:
  endpoints:
    web:
      exposure:
        include: prometheus